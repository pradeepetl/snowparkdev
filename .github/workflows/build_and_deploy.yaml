name: Deploy Snowpark Apps

# Controls when the action will run. 
on:
  push:
    branches:
      - dev

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          activate-environment: snowpark_demo
          environment-file: environment.yml

      - name: Conda info
        shell: bash -el {0}
        run: conda info


  deploy:
    runs-on: ubuntu-latest
    needs: build

    env:
      # SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      # SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
      # SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      # SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      # SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      # SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
      SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: dev

      - name: Install Python packages
        run: pip install -r requirements.txt

      - name: Deploy Snowpark apps
        working-directory: first_snowpark_project
        run: echo ${{ env.SNOWFLAKE_USER }}

        #run: python deploy_snowpark_app.py $GITHUB_WORKSPACE/first_snowpark_project

      - name: cliaction
        uses: Snowflake-Labs/snowflake-cli-action@v1
        with:
            cli-version: "latest"
            default-config-file-path: "config.toml"
        
          # Use the CLI
      - name: Test version
        run: |
           snow --version
           snow connection test

      - name: deploy code
        working-directory: first_snowpark_project
        run: |
            snow snowpark \
                 deploy --replace \
                  --temporary-connection \
                  --account ${{ env.SNOWFLAKE_ACCOUNT }} \
                  --username ${{ env.SNOWFLAKE_USER }} \
                  --database ${{ env.SNOWFLAKE_DATABASE }} \
                  --role ${{ env.SNOWFLAKE_ROLE }} \
                  --warehouse ${{ env.SNOWFLAKE_WAREHOUSE }}
                  --password  ${{ env.SNOWFLAKE_PASSWORD }}
      # - name: run snow
      #   run: snow snowpark build
           
